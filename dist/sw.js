(function () {
    'use strict';

    const CACHEVERSION = 2;
    const CACHENAME = `PWAEasy-static-v${CACHEVERSION}`;
    const RESOURCES = [
        "/",
        "index.html",
        "/js/bundle.js",
        "https://fonts.googleapis.com/css2?&family=Open+Sans:wght@300&family=Roboto:wght@700&display=swap",
    ];
    // install event
    self.addEventListener("install", async (event) => {
        console.log("[SW] install event fired!");
        // console.log(event);
        try {
            const cache = await caches.open(CACHENAME);
            return await cache.addAll(RESOURCES);
        }
        catch (error) {
            console.error("[SW] Install failed", error);
        }
        return;
    });
    // fetch event. Cache-first then network as fallback
    self.addEventListener("fetch", async (event) => {
        try {
            const cachedResponse = await caches.match(event.request);
            return cachedResponse || (await fetch(event.request));
        }
        catch (error) {
            console.error("[SW] Fetch failed", error);
        }
        return;
    });
    // activate event
    self.addEventListener("activate", async (event) => {
        const keys = await caches.keys();
        keys.forEach((cacheName) => {
            if (cacheName !== CACHENAME) {
                caches.delete(cacheName);
            }
        });
        return self.clients.claim();
    });

})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3cuanMiLCJzb3VyY2VzIjpbIi4uL3NyYy90cy9zdy9zdy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBDQUNIRVZFUlNJT04gPSAyO1xyXG5jb25zdCBDQUNIRU5BTUUgPSBgUFdBRWFzeS1zdGF0aWMtdiR7Q0FDSEVWRVJTSU9OfWA7XHJcbmNvbnN0IFJFU09VUkNFUyA9IFtcclxuICAgIFwiL1wiLFxyXG4gICAgXCJpbmRleC5odG1sXCIsXHJcbiAgICBcIi9qcy9idW5kbGUuanNcIixcclxuICAgIFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyPyZmYW1pbHk9T3BlbitTYW5zOndnaHRAMzAwJmZhbWlseT1Sb2JvdG86d2dodEA3MDAmZGlzcGxheT1zd2FwXCIsXHJcbl07XHJcbi8vIGluc3RhbGwgZXZlbnRcclxuc2VsZi5hZGRFdmVudExpc3RlbmVyKFwiaW5zdGFsbFwiLCBhc3luYyAoZXZlbnQpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKFwiW1NXXSBpbnN0YWxsIGV2ZW50IGZpcmVkIVwiKTtcclxuICAgIC8vIGNvbnNvbGUubG9nKGV2ZW50KTtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgY2FjaGUgPSBhd2FpdCBjYWNoZXMub3BlbihDQUNIRU5BTUUpO1xyXG4gICAgICAgIHJldHVybiBhd2FpdCBjYWNoZS5hZGRBbGwoUkVTT1VSQ0VTKTtcclxuICAgIH1cclxuICAgIGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJbU1ddIEluc3RhbGwgZmFpbGVkXCIsIGVycm9yKTtcclxuICAgIH1cclxuICAgIHJldHVybjtcclxufSk7XHJcbi8vIGZldGNoIGV2ZW50LiBDYWNoZS1maXJzdCB0aGVuIG5ldHdvcmsgYXMgZmFsbGJhY2tcclxuc2VsZi5hZGRFdmVudExpc3RlbmVyKFwiZmV0Y2hcIiwgYXN5bmMgKGV2ZW50KSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGNhY2hlZFJlc3BvbnNlID0gYXdhaXQgY2FjaGVzLm1hdGNoKGV2ZW50LnJlcXVlc3QpO1xyXG4gICAgICAgIHJldHVybiBjYWNoZWRSZXNwb25zZSB8fCAoYXdhaXQgZmV0Y2goZXZlbnQucmVxdWVzdCkpO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihcIltTV10gRmV0Y2ggZmFpbGVkXCIsIGVycm9yKTtcclxuICAgIH1cclxuICAgIHJldHVybjtcclxufSk7XHJcbi8vIGFjdGl2YXRlIGV2ZW50XHJcbnNlbGYuYWRkRXZlbnRMaXN0ZW5lcihcImFjdGl2YXRlXCIsIGFzeW5jIChldmVudCkgPT4ge1xyXG4gICAgY29uc3Qga2V5cyA9IGF3YWl0IGNhY2hlcy5rZXlzKCk7XHJcbiAgICBrZXlzLmZvckVhY2goKGNhY2hlTmFtZSkgPT4ge1xyXG4gICAgICAgIGlmIChjYWNoZU5hbWUgIT09IENBQ0hFTkFNRSkge1xyXG4gICAgICAgICAgICBjYWNoZXMuZGVsZXRlKGNhY2hlTmFtZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gc2VsZi5jbGllbnRzLmNsYWltKCk7XHJcbn0pO1xyXG5leHBvcnQge307XHJcbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7SUFBQSxNQUFNLFlBQVksR0FBRyxDQUFDLENBQUM7SUFDdkIsTUFBTSxTQUFTLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDO0lBQ3BELE1BQU0sU0FBUyxHQUFHO0lBQ2xCLElBQUksR0FBRztJQUNQLElBQUksWUFBWTtJQUNoQixJQUFJLGVBQWU7SUFDbkIsSUFBSSxrR0FBa0c7SUFDdEcsQ0FBQyxDQUFDO0lBQ0Y7SUFDQSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxFQUFFLE9BQU8sS0FBSyxLQUFLO0lBQ2xELElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQywyQkFBMkIsQ0FBQyxDQUFDO0lBQzdDO0lBQ0EsSUFBSSxJQUFJO0lBQ1IsUUFBUSxNQUFNLEtBQUssR0FBRyxNQUFNLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDbkQsUUFBUSxPQUFPLE1BQU0sS0FBSyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM3QyxLQUFLO0lBQ0wsSUFBSSxPQUFPLEtBQUssRUFBRTtJQUNsQixRQUFRLE9BQU8sQ0FBQyxLQUFLLENBQUMscUJBQXFCLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDcEQsS0FBSztJQUNMLElBQUksT0FBTztJQUNYLENBQUMsQ0FBQyxDQUFDO0lBQ0g7SUFDQSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLE9BQU8sS0FBSyxLQUFLO0lBQ2hELElBQUksSUFBSTtJQUNSLFFBQVEsTUFBTSxjQUFjLEdBQUcsTUFBTSxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUNqRSxRQUFRLE9BQU8sY0FBYyxLQUFLLE1BQU0sS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBQzlELEtBQUs7SUFDTCxJQUFJLE9BQU8sS0FBSyxFQUFFO0lBQ2xCLFFBQVEsT0FBTyxDQUFDLEtBQUssQ0FBQyxtQkFBbUIsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUNsRCxLQUFLO0lBQ0wsSUFBSSxPQUFPO0lBQ1gsQ0FBQyxDQUFDLENBQUM7SUFDSDtJQUNBLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLEVBQUUsT0FBTyxLQUFLLEtBQUs7SUFDbkQsSUFBSSxNQUFNLElBQUksR0FBRyxNQUFNLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNyQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxTQUFTLEtBQUs7SUFDaEMsUUFBUSxJQUFJLFNBQVMsS0FBSyxTQUFTLEVBQUU7SUFDckMsWUFBWSxNQUFNLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3JDLFNBQVM7SUFDVCxLQUFLLENBQUMsQ0FBQztJQUNQLElBQUksT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ2hDLENBQUMsQ0FBQzs7Ozs7OyJ9
